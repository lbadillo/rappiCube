¿En qué consiste el principio de responsabilidad única? ¿Cuál es su propósito?

Al dividir las grandes actividades en pequeños y atomicos problemas, su solución se hace más entendible. 
Cuando hay un elemento (servicio, componente, clase o mètodo) cuya finalidad abarca demasiadas capacidades, 
esta se hace muy dificil de enteder y por ende puede inducir a varios errores.
El principio de responsabilidad unica, hace referencia a asignar una responsabilidad atómica a cada componente que hace parte 
de un desarrollo, con el fin de diferenciar claramente las competencias de cada elemento que integra la solución y de esta forma
hacer mas entendible la misma logrando de esta manera que su mantenimiento sea facilmente realizado.

¿Qué características tiene según tu opinión “buen” código o código limpio?

1.Código Enfocado: Se puede tener una gran cantidad de clases y cada una de estas clases pueden tener mucho metodos con el fin de que cada uno de ellos sea simple y responda solamente por una responsabilidad de baja complejidad.
2. Los nombres de las variables,, metodos y clases deben hacer referneic al problema que se esta atacando, de esta forma se ace mas entendible el còdigo.
3. No existen metodos o clases que hagan lo mismo.
4. Principios como la identación, nombre del as variables, clases y metodos, hacen que leer el código sea fácil.
5. Debe tener pruebas unitarias y cumplir con los criterios de aceptaciòn.
6. Se deben evadir metodos muy largos. Si algo es demasiado complejo se deben dividir en tareas cortas y precisas.


  
